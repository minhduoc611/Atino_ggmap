name: Daily Google Maps Review Scraper

on:
  schedule:
    # Chạy lúc 2:00 AM UTC mỗi ngày (9:00 AM giờ Việt Nam)
    - cron: '0 0 * * *'
  workflow_dispatch:  # Cho phép chạy thủ công

jobs:
  scrape-reviews:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager requests
    
    - name: Install Chrome and ChromeDriver
      run: |
        # Cài đặt Chrome
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Create lark_config.py from secrets
      run: |
        cat > lark_config.py << EOF
        # Lark Base Configuration
        LARK_APP_ID = "${{ secrets.LARK_APP_ID }}"
        LARK_APP_SECRET = "${{ secrets.LARK_APP_SECRET }}"
        LARK_BASE_TOKEN = "${{ secrets.LARK_BASE_TOKEN }}"
        LARK_TABLE_ID = "${{ secrets.LARK_TABLE_ID }}"
        LARK_TABLE_REVIEW_ID = "${{ secrets.LARK_TABLE_REVIEW_ID }}"

        # API Endpoints
        LARK_API_BASE = "https://open.larksuite.com/open-apis"
        LARK_TENANT_ACCESS_TOKEN_URL = f"{LARK_API_BASE}/auth/v3/tenant_access_token/internal"
        LARK_LIST_RECORDS_URL = f"{LARK_API_BASE}/bitable/v1/apps/{{app_token}}/tables/{{table_id}}/records"
        LARK_CREATE_RECORD_URL = f"{LARK_API_BASE}/bitable/v1/apps/{{app_token}}/tables/{{table_id}}/records"
        LARK_UPDATE_RECORD_URL = f"{LARK_API_BASE}/bitable/v1/apps/{{app_token}}/tables/{{table_id}}/records/{{record_id}}"
        LARK_BATCH_CREATE_URL = f"{LARK_API_BASE}/bitable/v1/apps/{{app_token}}/tables/{{table_id}}/records/batch_create"
        LARK_BATCH_UPDATE_URL = f"{LARK_API_BASE}/bitable/v1/apps/{{app_token}}/tables/{{table_id}}/records/batch_update"
        EOF
    
    - name: Run scraper
      run: python main_scraper.py
      timeout-minutes: 60  # Timeout sau 60 phút
    
    - name: Upload logs (if failed)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: scraper-logs
        path: |
          *.log
          *.txt
